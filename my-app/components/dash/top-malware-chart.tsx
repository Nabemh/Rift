"use client"
import Plot from "@/components/PlotlyNoSSR"
import { Data, Layout } from "plotly.js";
import { useEffect, useState } from "react"

interface MalwareData {
  Infection: string
  "Frequency of Occurrence": number
  "Count of Unique IPs": number
}

export default function TopMalwareChart() {
  const [data, setData] = useState<MalwareData[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true)
        setError(null)
        
        const response = await fetch("http://localhost:8000/api/summary/malware")
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`)
        }
        
        const resData = await response.json()
        console.log("Malware API Response:", resData) // Debug log
        
        const summary = Array.isArray(resData?.summary_table)
          ? resData.summary_table
          : []
        
        setData(summary.slice(0, 10))
      } catch (err) {
        console.error("Failed to load malware chart data", err)
        setError(err instanceof Error ? err.message : "Failed to load data")
      } finally {
        setLoading(false)
      }
    }

    fetchData()
  }, [])

  if (loading) return <p className="text-sm text-gray-500">Loading malware chart...</p>
  if (error) return <p className="text-sm text-red-500">Error: {error}</p>
  if (data.length === 0) return <p className="text-sm text-gray-500">No malware data available</p>

  const plotData: Data[] = [
    {
      type: "bar",
      x: data.map((d) => d["Frequency of Occurrence"]),
      y: data.map((d) => d.Infection),
      orientation: "h",
      marker: { color: "#DC2626" }, // Red color for malware
      text: data.map((d) => d["Frequency of Occurrence"].toString()),
      textposition: "outside",
      name: "Frequency"
    }
  ]

  const layout: Partial<Layout> = {
    margin: { l: 150, r: 40, t: 20, b: 40 },
    height: Math.max(350, data.length * 50), // Dynamic height
    yaxis: { 
      automargin: true,
      autorange: "reversed" // Show highest values at top
    },
    xaxis: { title: { text: "Frequency of Occurrence" } },
    paper_bgcolor: "rgba(0,0,0,0)",
    plot_bgcolor: "rgba(0,0,0,0)",
    showlegend: false,
  }

  return (
    <div className="w-full">
      <Plot
        data={plotData}
        layout={layout}
        style={{ width: "100%", height: "100%" }}
        config={{ responsive: true, displayModeBar: false }}
      />
    </div>
  )
}